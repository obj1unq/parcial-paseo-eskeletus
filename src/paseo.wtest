import paseo.*
describe "test de una familia que NO pasea" {

//NOTA: Este fixture está incompleto y sirve para comenzar a testear el examen.
//Es a modo de ayuda, pero no es obligatorio respetar este escenario. 
// Puede modificarse tanto como sea necesario.

	var mediaIzquierda = new Prenda(desgaste = 1, talle='s') //elemento de par
	var mediaDerecha = new Prenda(desgaste = 3, talle='s')
	
	//prenda par, la media izquierda tiene que tener 1 de desgaste, la derecha 3, el abrigo es default 0
    var mediasZoe = new PrendaDeAPar(izquierdo=mediaIzquierda, derecho=mediaDerecha, talle=s) 
	
	//prenda par, el izquierdo y derecho tiene los valores default (desgaste 0, abrigo 1)
	var zapatillasZoe = new PrendaDeAPar(talle=s) 
	
	//prenda pesada con 5 de abrigo
	var jeanZoe = new RopaPesada(talle=s, abrigo=5) 
	
	//prenda liviana con desgaste default: 0
	var remeraZoe = new paseo.RopaLiviana(talle=s) 
	// prenda pesada con desgaste default: 0
	var camperaZoe = new paseo.RopaPesada(talle=s) 

	//un juguete para niños de 5 a 100 anios
	var ukelele = new Juguete(min=5, max=100)
	
	//prenda liviana con un desgaste de 5
	var remeraMilena = new paseo.RopaLiviana(talle=xs, desgaste=5) //prenda liviana
	//prenda liviana con desgaste default: 0
	var calzaMilena = new paseo.RopaLiviana(talle=xs) //prenda liviana

	//prenda par, la ojota izquierda tiene que tener 1 de desgaste y 2 de abrigo, la ojota derecha tiene 3 de desgaste y 3 de abrigo
    var ojotasMilena = new paseo.PrendaDeAPar(talle=l, derecho = new Prenda(talle = l, desgaste=3, abrigo=3), izquierdo = new Prenda(talle = l, desgaste=1, abrigo=2)) 
	
	//ninio
	var zoe = new Ninio(talle=s, edad=11, prendas=#{mediasZoe, zapatillasZoe, jeanZoe, remeraZoe, camperaZoe }) 
	//ninio problematico
	var milena = new paseo.NinioProblematico(talle=xs, edad=2, prendas = #{remeraMilena, calzaMilena, ojotasMilena }, juguete=ukelele)
	
	//familia	
	var familiaAptaSalir = new paseo.Familia(ninios = #{ zoe})

	//familia	
	var familiaNoAptaParaSalir= new paseo.Familia(ninios = #{milena, zoe})
	
	
//PUNTO 1	
	test "comodidad" {
		
		assert.equals(6 , mediasZoe.comodidadTotalPara(zoe) )
		assert.equals(8 , zapatillasZoe.comodidadTotalPara(zoe))
		assert.equals(8 , jeanZoe.comodidadTotalPara(zoe))
		assert.equals(10 , remeraZoe.comodidadTotalPara(zoe))
		assert.equals(8 , camperaZoe.comodidadTotalPara(zoe))
		assert.equals(7 , remeraMilena.comodidadTotalPara(milena))		
		assert.equals(10 , calzaMilena.comodidadTotalPara(milena))
		assert.equals(-3 , ojotasMilena.comodidadTotalPara(milena))
	}

//PUNTO 2		
	test "intercambiar pares ok" {
		var mediaIzq = mediasZoe.izquierdo()
		var mediaDer = mediasZoe.derecho()
		var zapaIzq = zapatillasZoe.izquierdo()
		var zapaDer = zapatillasZoe.derecho()
		
		mediasZoe.intercambiar(zapatillasZoe)

		assert.equals(mediaIzq, mediasZoe.izquierdo())
		assert.equals(mediaDer, zapatillasZoe.derecho())
		assert.equals(zapaIzq, zapatillasZoe.izquierdo())
		assert.equals(zapaDer, mediasZoe.derecho())
				
	}
	
	test "intercambiar pares no ok" {
		//Que sucede si intercambio un par de talles distinto?
		//probar el cambio entre las ojotas de milena y las medias de zoe
		//El test está incompleto!
		assert.throwsException({ojotasMilena.intercambiar(mediasZoe)})
	}

//PUNTO 3	
	test "nivel de abrigo" {
		assert.equals(2 , mediasZoe.abrigo())
		assert.equals(2 , zapatillasZoe.abrigo())
		assert.equals(5 , jeanZoe.abrigo())
		assert.equals(1 , remeraZoe.abrigo())
		assert.equals(3 , camperaZoe.abrigo())
		assert.equals(1 , remeraMilena.abrigo())		
		assert.equals(1 , calzaMilena.abrigo())
		assert.equals(5 , ojotasMilena.abrigo())
	}

//PUNTO 4		
	test "puede salir de paseo" {
		assert.that(familiaAptaSalir.puedePasear())
		assert.notThat(familiaNoAptaParaSalir.puedePasear())
	}

//PUNTO 5
	
	test "infaltables" {
		assert.equals(#{jeanZoe,calzaMilena}, familiaNoAptaParaSalir.infaltables())		
	}
	test "chiquitos" {
		assert.equals(#{milena}, familiaNoAptaParaSalir.chiquitos()
		)		
	}
	
//PUNTO 6	
test "salir de paseo ok" {
		familiaAptaSalir.pasear()
		assert.equals(1.8 , mediaIzquierda.desgaste())
		assert.equals(4.2 , mediaDerecha.desgaste())
		assert.equals(3 , mediasZoe.desgaste())
		assert.equals(1 , zapatillasZoe.desgaste())
		assert.equals(1 , jeanZoe.desgaste())
		assert.equals(1 , remeraZoe.desgaste())
		assert.equals(1 , camperaZoe.desgaste())
		
	}
//PUNTO 7	
	test "salir de paseo no ok" {
		//Que sucede si le pido pasear a una familia que no está lista?
		//El test está incompleto!
		familiaNoAptaParaSalir.pasear()
	}
	

}